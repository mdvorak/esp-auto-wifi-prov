name: test

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
    paths-ignore: [ "*.md" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  IDF_COMPONENT_MANAGER: "1"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Custom Kconfig values
        mode:
          - CONFIG_BT_ENABLED: y
            CONFIG_WIFI_AUTO_PROV_TYPE_BLE: y
            CONFIG_WIFI_AUTO_PROV_TYPE_SOFT_AP: n
            CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BTDM: y
            CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BLE: n
            CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BT: n
            CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_NONE: n
          - CONFIG_BT_ENABLED: y
            CONFIG_WIFI_AUTO_PROV_TYPE_BLE: y
            CONFIG_WIFI_AUTO_PROV_TYPE_SOFT_AP: n
            CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BTDM: n
            CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BLE: y
            CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BT: n
            CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_NONE: n
          - CONFIG_BT_ENABLED: y
            CONFIG_WIFI_AUTO_PROV_TYPE_BLE: y
            CONFIG_WIFI_AUTO_PROV_TYPE_SOFT_AP: n
            CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BTDM: n
            CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BLE: n
            CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BT: y
            CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_NONE: n
          - CONFIG_BT_ENABLED: y
            CONFIG_WIFI_AUTO_PROV_TYPE_BLE: y
            CONFIG_WIFI_AUTO_PROV_TYPE_SOFT_AP: n
            CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BTDM: n
            CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BLE: n
            CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BT: n
            CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_NONE: y
          - CONFIG_BT_ENABLED: n
            CONFIG_WIFI_AUTO_PROV_TYPE_BLE: n
            CONFIG_WIFI_AUTO_PROV_TYPE_SOFT_AP: y
        # ESP-IDF versions and targets
        idf_ver: [ v4.2, v4.3, v4.4 ]
        idf_target: [ esp32, esp32s2, esp32s3, esp32c3 ]
        # Filter out unsupported combinations
        exclude:
          - { idf_target: esp32s2, mode: { CONFIG_WIFI_AUTO_PROV_TYPE_BLE: y } } # s2 does not have bluetooth
          - { idf_target: esp32c3, idf_ver: v4.2 }
          - { idf_target: esp32c3, idf_ver: v4.3 }
          - { idf_target: esp32s3, idf_ver: v4.2 }
          - { idf_target: esp32s3, idf_ver: v4.3 }
    container: espressif/idf:release-${{ matrix.idf_ver }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Component Manager
        run: |
          . ${IDF_PATH}/export.sh
          pip install --upgrade idf-component-manager

      - name: Build
        env:
          IDF_TARGET: ${{ matrix.idf_target }}
        working-directory: example
        run: |
          echo "CONFIG_WIFI_AUTO_PROV_TYPE_BLE=${{ matrix.mode.CONFIG_WIFI_AUTO_PROV_TYPE_BLE }}" >> sdkconfig
          echo "CONFIG_WIFI_AUTO_PROV_TYPE_SOFT_AP=${{ matrix.mode.CONFIG_WIFI_AUTO_PROV_TYPE_SOFT_AP }}" >> sdkconfig
          echo "CONFIG_BT_ENABLED=${{ matrix.mode.CONFIG_BT_ENABLED }}" >> sdkconfig
          echo "CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BTDM=${{ matrix.mode.CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BTDM }}" >> sdkconfig
          echo "CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BLE=${{ matrix.mode.CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BLE }}" >> sdkconfig
          echo "CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BT=${{ matrix.mode.CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_FREE_BT }}" >> sdkconfig
          echo "CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_NONE=${{ matrix.mode.CONFIG_WIFI_AUTO_PROV_SCHEME_EVENT_HANDLER_NONE }}" >> sdkconfig
          
          . ${IDF_PATH}/export.sh
          idf.py build

  platformio:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install platformio
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      - name: Setup Component Manager
        run: |
          pip install --upgrade idf-component-manager

      - name: Build
        run: platformio run -d example
